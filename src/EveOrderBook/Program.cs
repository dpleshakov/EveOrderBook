namespace EveOrderBook;

internal class Program
{
    static void Main() {
        string configPath = Path.Combine(Directory.GetCurrentDirectory(), "Config.json");

        if (!File.Exists(configPath)) {
            Console.WriteLine($"Error: missing configuration file '{configPath}'");
        }

        Config config = Config.Read(configPath);

        Taxes taxes = new Taxes {
            BuyBrokerFee = config.BuyBrokerFee,
            SellBrokerFee = config.SellBrokerFee,
            SellTax = config.SellTax,
        };

        Marketlogs marketlogs = new Marketlogs(config.StationId, taxes);

        if (string.Compare(config.HelpMessageFormat, "full", StringComparison.InvariantCultureIgnoreCase) == 0) {
            WriteFullHelpMessageToConsole(configPath, taxes, config.StationId, marketlogs.SourceMarketlogsDirectory);
        }
        else if (string.Compare(config.HelpMessageFormat, "short", StringComparison.InvariantCultureIgnoreCase) == 0) {
            WriteShortHelpMessageToConsole(taxes, config.StationId);
        }
        else {
            marketlogs.WriteProfitMarginToConsole();
        }

        marketlogs.StartWatch();

        Thread.Sleep(Timeout.Infinite);
    }

    private static void WriteFullHelpMessageToConsole(string configPath, Taxes taxes, string stationId, string marketlogsPath) {
        Console.Write(
$@"The EVE Online Order Book is a simple console application designed to analyze market export files generated by the game. Whenever you exports market data from EVE Online, this application automatically reads the exported file to identify the best buy and sell orders for a particular item. It then calculates the potential profit and profit margin of a trading deal based on these orders.

Path to config: {configPath}

Your characters attributes:
    - Buy broker fee: {taxes.BuyBrokerFee:N2}%
    - Sell broker fee: {taxes.SellBrokerFee:N2}%
    - Sell tax: {taxes.SellTax:N2}%

The trading station ID is essential for filtering out market orders that are not relevant to your station. You can use '60003760' for Jita IV - Moon 4 CNAP:
    - Trading station: {stationId}

Glossary:
    - Profit = Sell Total - Buy Total
    - Profit Margin = Profit / Buy Total
    - Buy Total = Buy Price + Buy Fee (at least 100 ISK)
    - Sell Total = Sell Price - Sell Fee (at least 100 ISK) - Sell Tax

Path to EVE Online 'Marketlogs' directory: {marketlogsPath}

Use 'Export to File' button in the game to view a deal profit margin...");
    }

    private static void WriteShortHelpMessageToConsole(Taxes taxes, string stationId) {
        Console.Write(
$@"Buy broker fee: {taxes.BuyBrokerFee:N2}%
Sell broker fee: {taxes.SellBrokerFee:N2}%
Sell tax: {taxes.SellTax:N2}%

Trading station: {stationId}

Use 'Export to File' button in the game to view a deal profit margin...");
    }
}
