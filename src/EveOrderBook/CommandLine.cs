using System.CommandLine;

namespace EveOrderBook;

internal static class CommandLine
{
    public const string Description =
"The EVE Online Order Book is a console application designed to analyze market export files generated by the game. " +
"Whenever you exports market data from EVE Online, this application automatically reads the exported file to identify the best buy and sell orders for a particular item. " +
@"It then calculates the potential profit and profit margin of a trading deal based on these orders.

Set the trading station ID in config for filtering out market orders that are not relevant to your station. Use '60003760' for 'Jita IV - Moon 4 Caldari Navy Assembly Plant'.

Glossary:
    - Profit = Sell Total - Buy Total
    - Profit Margin = Profit / Buy Total
    - Buy Total = Buy Price + Buy Fee (at least 100 ISK)
    - Sell Total = Sell Price - Sell Fee (at least 100 ISK) - Sell Tax

Use 'Export to File' button in the game to view a deal profit margin.";

    public static Option<FileInfo> GetConfigFileOption() {
        Option<FileInfo> configFileOption = new Option<FileInfo>(
            name: "--config",
            description: "The path to the configuration file.",
            isDefault: true,
            parseArgument: result => {
                if (result.Tokens.Count == 0) {
                    return new FileInfo(Config.DefaultConfigPath);
                }

                string? filePath = result.Tokens.Single().Value;
                if (!File.Exists(filePath)) {
                    Console.WriteLine($"Warning: The specified config file doesn't exist: '{filePath}'.");
                    Console.WriteLine($"Warning: Used the default config file path: '{Config.DefaultConfigPath}'.");
                    return new FileInfo(Config.DefaultConfigPath);
                }

                return new FileInfo(filePath);
            });

        return configFileOption;
    }

    public static Option<DirectoryInfo> GetMarketlogsDirectoryOption() {
        Option<DirectoryInfo> marketlogsDirectoryOption = new Option<DirectoryInfo>(
            name: "--marketlogs",
            description: "The path to the EVE Online marketlogs export directory.",
            isDefault: true,
            parseArgument: result => {
                if (result.Tokens.Count == 0) {
                    return new DirectoryInfo(Marketlogs.DefaultMarketlogsPath);
                }

                string? directoryPath = result.Tokens.Single().Value;
                if (!Directory.Exists(directoryPath)) {
                    Console.WriteLine($"Warning: The specified marketlogs directory doesn't exist: '{directoryPath}'.");
                    Console.WriteLine($"Warning: Used the default marketlogs directory path: '{Marketlogs.DefaultMarketlogsPath}'.");
                    return new DirectoryInfo(Marketlogs.DefaultMarketlogsPath);
                }

                return new DirectoryInfo(directoryPath);
            });

        return marketlogsDirectoryOption;
    }
}
